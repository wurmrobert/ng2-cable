{"version":3,"file":"broadcaster.js","sourceRoot":"","sources":["../src/broadcaster.ts"],"names":[],"mappings":"OAAO,EAAE,OAAO,EAAE,MAAM,cAAc;OAE/B,0BAA0B;OAC1B,uBAAuB;AAO9B;IAGE;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,OAAO,EAAkB,CAAC;IACjD,CAAC;IAED,+BAAS,GAAT,UAAU,GAAQ,EAAE,IAAU;QAC5B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,QAAG,EAAE,UAAI,EAAC,CAAC,CAAC;IACnC,CAAC;IAED,wBAAE,GAAF,UAAM,GAAQ;QACZ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;aACjC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,GAAG,KAAK,GAAG,EAAjB,CAAiB,CAAC;aAClC,GAAG,CAAC,UAAA,KAAK,IAAI,OAAG,KAAK,CAAC,IAAI,EAAb,CAAa,CAAC,CAAC;IACjC,CAAC;IACH,kBAAC;AAAD,CAAC,AAhBD,IAgBC","sourcesContent":["import { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nexport interface BroadcastEvent {\n  key: any;\n  data?: any;\n}\n\nexport class Broadcaster {\n  private _eventBus: Subject<BroadcastEvent>;\n\n  constructor() {\n    this._eventBus = new Subject<BroadcastEvent>();\n  }\n\n  broadcast(key: any, data?: any) {\n    this._eventBus.next({key, data});\n  }\n\n  on<T>(key: any): Observable<T> {\n    return this._eventBus.asObservable()\n      .filter(event => event.key === key)\n      .map(event => <T>event.data);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}