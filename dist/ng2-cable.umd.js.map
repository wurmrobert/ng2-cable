{"version":3,"file":"ng2-cable.umd.js","sources":["../ts/broadcaster.ts","../ts/configuration.ts","../ts/ng2-cable.service.ts","../ts/ng2-cable.module.ts"],"sourcesContent":["import { Subject, Observable } from 'rxjs/Rx';\n\ninterface BroadcastEvent {\n  key: any;\n  data?: any;\n}\n\nexport class Broadcaster {\n  private _eventBus = new Subject<BroadcastEvent>();\n\n  broadcast(key: any, data?: any) {\n    this._eventBus.next({key, data});\n  }\n\n  on<T>(key: any): Observable<T> {\n    return this._eventBus.asObservable()\n      .filter(event => event.key === key)\n      .map(event => <T>event.data);\n  }\n}\n","export class Configuration {\n    constructor(public url: string) {}\n}\n","import { Configuration } from './configuration';\nimport { Injectable, Optional } from '@angular/core';\nimport { Broadcaster } from './broadcaster';\nvar ActionCable = require('actioncable')\n\n@Injectable()\nexport class Ng2CableService {\n\tpublic cable: any;\n\tpublic channels: any = {};\n\n\tconstructor( @Optional() public readonly configuration: Configuration) {\n\t\tthis.connect(configuration.url);\n\t}\n\n\tsubscribe(channel: any, params = {}): Broadcaster {\n\t\tlet channelName = (typeof (channel) === 'object') ? channel['channel'] : channel;\n\t\tlet subscriptionParams = Object.assign({ channel: channel }, params);\n\t\tvar broadcaster = new Broadcaster();\n\t\tlet subscription = this.cable.subscriptions.create(subscriptionParams, {\n\t\t\treceived: (data) => {\n\t\t\t\tbroadcaster.broadcast(data.action, data);\n\t\t\t}\n\t\t});\n\n\n\t\tthis.channels[channelName] = {\n\t\t\tsubscription: subscription,\n\t\t\tbroadcaster: broadcaster\n\t\t};\n\t\treturn broadcaster;\n\t}\n\n\tunsubscribe(channel: string): void {\n\t\tif(!this.channels[channel].subscription) {\n\t\t\tconsole.info(`No Subscription for Channel ${channel} found!`);\n\t\t} else {\n\t\t\tlet subscription = this.channels[channel].subscription;\n\t\t\tthis.cable.subscriptions.remove(subscription);\n\t\t}\n\t}\n\n\tperform(channel: string, action: string, data: any): void {\n\t\tthis.channels[channel].subscription.perform(action, data);\n\t}\n\n\tconnect(url: string): any {\n\t\tthis.cable = ActionCable.createConsumer(url);\n\t\tthis.cable.connect();\n\t\treturn this.cable;\n\t}\n\n\tdisconnect(): void {\n\t\tthis.cable.disconnect();\n\t}\n}\n","import { Configuration } from './configuration';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { Ng2CableService } from './ng2-cable.service';\nimport { Broadcaster } from './broadcaster';\n\n@NgModule({\n\timports: [],\n\tproviders: [\n\t\tNg2CableService\n\t]\n})\nexport class Ng2CableModule {\n\tpublic static forConfig(configurationFactory: () => Configuration): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: Ng2CableModule,\n\t\t\tproviders: [{ provide: Configuration, useFactory: configurationFactory }]\n\t\t}\n\t}\n}"],"names":["Subject","Injectable","Optional","NgModule"],"mappings":"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"}